####################################################
# aahwebsite - Application Routes Configuration
#
# Complete configuration reference:
#   https://docs.aahframework.org/routes-config.html
####################################################

#------------------------------------------------------------------------
# Domain and sub-domain configuration goes into section `domains { ... }`
#------------------------------------------------------------------------
domains {

  # Domain name/ip address with port no, basically unique name
  aahframework {
    name = "aahframework.org routes"

    # aah supports multi-domain routes configuration out-of-the-box.
    # `host` used to determine domain routes for the incoming request.
    # For e.g: example.org
    host = "localhost"

    # Redirect trailing slash is to enable automatic redirection if the current
    # route can't be matched but a `route` for the path with (without)
    # the trailing slash exists.
    # Default value is `true`.
    #redirect_trailing_slash = true

    # aah supports out-of-the-box `405 MethodNotAllowed` status with `Allow`
    # header as per `RFC7231`. Perfect for RESTful APIs.
    # Default value is `true`.
    #method_not_allowed = true

    # aah framework supports out-of-the-box `OPTIONS` request replies.
    # User defined `OPTIONS` routes take priority over the automatic replies.
    # Perfect for RESTful APIs.
    # Default value is `true`.
    #auto_options = true

    #----------------------------------------------------------------------------
    # Static Routes Configuration
    # To serve static files, it can be directory or individual file.
    # This section optional one, for e.g: RESTful APIs doesn't need this section.
    # Static files are delivered via `http.ServeContent`.
    #
    # Supported features:
    #   * Serve directory
    #   * Serve individual file
    #   * Directory listing
    #
    # Pick your choice of `unique name` for each `directory` or `individual` file
    # static route definition. It is called `route name`.
    # Doc: https://docs.aahframework.org/routes-config.html#section-static
    #----------------------------------------------------------------------------
    static {
      #-------------------------------------
      # Static route name, pick a unique one
      # for serving directory
      #-------------------------------------
      public_assets {
        # URL 'path' for serving directory
        # Below definition means '/assets/**'
        path = "/assets"

        # Relative to application base directory or an absolute path
        dir = "static"

        # list directory, default is 'false'
        #list = true
      }

      # serving single file
      favicon {
        path = "/favicon.ico"

        # Direct file mapping, It can be relative to application base directory
        # or an absolute path. For relative path, it uses below `base_dir` config value.
        file = "img/favicon.ico"
      }

      browserconfig {
        path = "/browserconfig.xml"
        file = "browserconfig.xml"
      }

      robots_txt {
        path = "/robots.txt"
        file = "robots.txt"
      }

      sitemap_xml {
        path = "/sitemap.xml"
        file = "sitemap.xml"
      }
    }

    #-----------------------------------------------------------------------------
    # Application routes
    # Doc: https://docs.aahframework.org/routes-config.html#section-routes
    # Doc: https://docs.aahframework.org/routes-config.html#namespace-group-routes
    #-----------------------------------------------------------------------------
    routes {

      #------------------------------------------------------
      # Pick an unique name, it's called `route name`,
      # used for reverse URL.
      #------------------------------------------------------
      index {
        # path is used to match incoming requests
        # It can contain `:name` - Named parameter and
        # `*name` - Catch-all parameter
        path = "/"

        # HTTP method mapping, It can be multiple `HTTP` methods with comma separated
        # Default value is `GET`, it can be lowercase or uppercase
        #method = "GET"

        # The controller to be called for mapped URL path.
        #   * `controller` attribute supports with or without package prefix. For e.g.: `v1.User` or `User`
        #   * `controller` attribute supports both naming conventions. For e.g.: `User` or `UserController`
        controller = "SiteController"

        # The action/method name in the controller to be called for mapped URL path.
        # Default values are mapped based on `HTTP` method. Refer doc for more info.
        # Default action value for GET is 'Index'.
        #action = "Index"
      }

      get_involved {
        path = "/get-involved.html"
        controller = "SiteController"
        action = "GetInvolved"
      }

      security_vulnerability {
        path = "/security/vulnerabilities.html"
        controller = "SiteController"
        action = "Content"
      }

      features {
        path = "/features.html"
        controller = "SiteController"
        action = "Content"
      }

      security {
        path = "/security.html"
        controller = "SiteController"
        action = "Content"
      }

      why_aah {
        path = "/why-aah.html"
        controller = "SiteController"
        action = "WhyAah"
      }

      credits {
        path = "/credits.html"
        controller = "SiteController"
        action = "Content"
      }

      team {
        path = "/team.html"
        controller = "SiteController"
        action = "Team"
      }

      privacy {
        path = "/privacy.html"
        controller = "SiteController"
        action = "Privacy"
      }

      support {
        path = "/support.html"
        controller = "SiteController"
        action = "Support"
      }

    } # end - app routes

  } # end - aahframework

  docs_aahframework {
    name = "docs.aahframework.org routes"
    host = "docs.localhost"
    subdomain = true

    method_not_allowed = true
    redirect_trailing_slash = true
    auto_options = false

    routes {
      index {
        path = "/"
        controller = "DocController"
      }

      refresh_doc {
        path = "/refresh"
        method = "POST"
        controller = "DocController"
        action = "RefreshDoc"
        anti_csrf_check = false
      }

      version_home {
        path = "/:version"
        controller = "DocController"
        action = "VersionHome"

        routes {
          show_doc {
            path = "/*content"
            action = "ShowDoc"
          }
        }
      }

      #show_doc {
      #  path = "/:version/*content"
      #  controller = "DocController"
      #  action = "ShowDoc"
      #}

    } # end - docs app routes

  } # end - docs aahframework

} # end - domains
